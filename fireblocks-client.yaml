openapi: 3.0.0
info:
  title: Fireblocks API
  version: "1.5.1"
servers:
  - url: 'https://api.fireblocks.io/v1'
paths:
  #  VAULT
  '/vault/accounts':
    post:
      summary: Creates a new vault account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Account Name
                  type: string
                hiddenOnUI:
                  description: >-
                    Optional - if true, the created account and all related transactions will not be shown on Fireblocks console
                  type: boolean
                customerRefId:
                  description: >-
                    Optional - Sets a customer reference ID
                  type: string
                autoFuel:
                  description:
                    Optional - Sets the autoFuel property of the vault account
                  type: boolean
      responses:
        '200':
          description: A Vault Account object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAccount'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts_paged':
    get:
      summary: Retrieves all vault accounts in your workspace. This command is limited up to a certain amount of results to ensure response time is received in a timely manner
      parameters:
        - in: query
          name: namePrefix
          required: false
          schema:
            type: string
        - in: query
          name: nameSuffix
          required: false
          schema:
            type: string
        - in: query
          name: minAmountThreshold
          required: false
          schema:
            type: string
        - in: query
          name: assetId
          required: false
          schema:
            type: string
        - in: query
          name: orderBy
          required: false
          schema:
            type: string
            enum: [ "ASC", "DESC" ]
            default: "DESC"
        - in: query
          name: before
          required: false
          schema:
            type: string
        - in: query
          name: after
          required: false
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 25000
            default: 10000
      responses:
        '200':
          description: An object containing vault accounts and previous/next page cursors
          content:
            '*/*':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/VaultAccountsPagedResponse'
  '/vault/accounts/{vaultAccountId}':
    get:
      summary: Returns a Fireblock Vault account by ID
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
            type: string
          schema:
            type: string
      responses:
        '200':
          description: A Vault Account object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAccount'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/activate':
    post:
      summary: Activate a wallet in a Vault account
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return, or 'default' for the default vault account
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVaultAssetResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}':
    get:
      summary: Returns a wallet of a specific asset inside a Fireblocks Vault account
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
      responses:
        '200':
          description: A VaultAsset object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Creates a new wallet in a Vault account
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return, or 'default' for the default vault account
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                eosAccountName:
                  description: Optional - when creating an EOS wallet, the account name. If not provided, a random name will be generated
                  type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVaultAssetResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/balance':
    post:
      summary: Update balance and returns a wallet of a specific asset inside a Fireblocks Vault account
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
      requestBody:
        required: false
        content:
          '*/*':
            schema:
              type: object
      responses:
        '200':
          description: A VaultAsset object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
  '/vault/accounts/{vaultAccountId}/{assetId}/addresses':
    get:
      summary: Returns all addresses generated for a Vault wallet
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
      responses:
        '200':
          description: A list of deposit addresses
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaultWalletAddress'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Generate a new deposit address for a Vault wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                description:
                  description: (Optional) Attach a description to the new address
                  type: string
                customerRefId:
                  description: >-
                    Optional - Sets a customer reference ID
                  type: string
      parameters:
        - in: path
          name: vaultAccountId
          required: true
          description: >-
            The ID of the vault account to return
          schema:
            type: string
        - in: path
          name: assetId
          required: true
          description: The ID of the asset
          schema:
            type: string
      responses:
        '200':
          description: The created address
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateAddressResponse'
        default:
          $ref: '#/components/responses/Error'
  '/vault/assets':
    get:
      summary: Gets the assets amount summary for all \ filtered accounts.
      parameters:
        - in: query
          name: accountNamePrefix
          required: false
          schema:
            type: string
        - in: query
          name: accountNameSuffix
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Amount by asset
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
  '/vault/assets/{assetId}':
    get:
      summary: Gets vault balance summary by asset.
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vault amount by asset
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VaultAsset'
        default:
          $ref: '#/components/responses/Error'
  # TRANSACTIONS
  /transactions:
    get:
      summary: Gets a list of transactions under the tenant
      parameters:
        - in: query
          name: before
          description: >-
            Unix timestamp in milliseconds. Returns only transactions created before the
            specified date
          required: false
          schema:
            type: string
        - in: query
          name: after
          description: >-
            Unix timestamp in milliseconds. Returns only transactions created after the
            specified date
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: >-
            Comma-separated list of statuses. Returns only transactions with
            one of the specified statuses
          required: false
          schema:
            type: string
        - in: query
          name: orderBy
          description: The field to order the results by
          required: false
          schema:
            type: string
            enum:
              - createdAt
              - lastUpdated
        - in: query
          name: sort
          description: The direction to order the results by
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: limit
          description: >-
            Limits the number of results. If not provided, a limit of 200 will be used. The maximum allowed limit is 500
          required: false
          schema:
            type: integer
            minimum: 1
            default: 200
        - in: query
          name: sourceType
          description: The source type of the transaction
          required: false
          schema:
            type: string
            enum:
              - VAULT_ACCOUNT
              - EXCHANGE_ACCOUNT
              - INTERNAL_WALLET
              - EXTERNAL_WALLET
              - FIAT_ACCOUNT
              - NETWORK_CONNECTION
              - COMPOUND
              - UNKNOWN
              - GAS_STATION
              - OEC_PARTNER
        - in: query
          name: sourceId
          description: The source ID of the transaction
          required: false
          schema:
            type: string
        - in: query
          name: destType
          description: The destination type of the transaction
          required: false
          schema:
            type: string
            enum:
              - VAULT_ACCOUNT
              - EXCHANGE_ACCOUNT
              - INTERNAL_WALLET
              - EXTERNAL_WALLET
              - FIAT_ACCOUNT
              - NETWORK_CONNECTION
              - COMPOUND
              - ONE_TIME_ADDRESS
              - OEC_PARTNER
        - in: query
          name: destId
          description: The destination ID of the transaction
          required: false
          schema:
            type: string
        - in: query
          name: assets
          description: A list of assets to filter by, seperated by commas
          required: false
          schema:
            type: string
        - in: query
          name: txHash
          description: Returns only results with a specified txHash
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of transactions
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        default:
          $ref: '#/components/responses/Error'
    post:
      summary: Creates a new transaction
      responses:
        '200':
          description: A transaction object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
  '/transactions/{txId}':
    get:
      summary: Returns a transaction by ID
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to return
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An Transaction object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/drop':
    post:
      summary: Drop ETH based transaction by ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropTransactionRequest'
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DropTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/cancel':
    post:
      summary: Cancels a transaction by ID
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to cancel
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: An Transaction object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CancelTransactionResponse'
        default:
          $ref: '#/components/responses/Error'
  '/transactions/{txId}/freeze':
    post:
      summary: Freezes a transaction by ID
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to freeze
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: freeze response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FreezeTransactionResponse'
  '/transactions/{txId}/unfreeze':
    post:
      summary: Unfreezes a transaction by ID
      parameters:
        - in: path
          name: txId
          required: true
          description: The ID of the transaction to unfreeze
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: Unfreeze response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UnfreezeTransactionResponse'
  '/transactions/validate_address/{assetId}/{address}':
    get:
      summary: Check if given address is valid
      parameters:
        - in: path
          name: assetId
          required: true
          description: The asset of the address
          schema:
            type: string
        - in: path
          name: address
          required: true
          description: The address to validate
          schema:
            type: string
      responses:
        '200':
          description: An Transaction object
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidateAddressResponse'
        default:
          $ref: '#/components/responses/Error'

security:
  - bearerTokenAuth: [ ]
  - ApiKeyAuth: [ ]
components:
  responses:
    Error:
      description: Error Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    NewWallet:
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                description: the wallet's display name
    WalletAddressProperties:
      content:
        application/json:
          schema:
            properties:
              address:
                type: string
                description: The wallet's address (or xpub) of the wallet
  securitySchemes:
    bearerTokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: number
    AmountInfo:
      type: object
      properties:
        amount:
          type: string
        requestedAmount:
          type: string
        netAmount:
          type: string
        amountUSD:
          type: string
    AuthorizationInfo:
      type: object
      properties:
        allowOperatorAsAuthorizer:
          type: boolean
        logic:
          type: string
          enum:
            - AND
            - OR
        groups:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationGroups'
    AuthorizationGroups:
      type: object
      properties:
        th:
          type: number
        users:
          type: object
          additionalProperties:
            type: string
            enum:
              - PENDING_AUTHORIZATION
              - APPROVED
              - REJECTED
              - NA
    AllocatedBalance:
      type: object
      properties:
        allocationId:
          type: string
        thirdPartyAccountId:
          type: string
        affiliation:
          type: string
        virtualType:
          type: string
        total:
          type: string
        available:
          type: string
        pending:
          type: string
        frozen:
          type: string
        locked:
          type: string
        staked:
          type: string
    RewardInfo:
      type: object
      properties:
        srcRewards:
          type: string
        destRewards:
          type: string
    RewardsInfo:
      type: object
      properties:
        pendingRewards:
          description: Amount that is pending for rewards
          type: string
    TransferPeerPath:
      type: object
      properties:
        type:
          type: string
          enum:
            - VAULT_ACCOUNT
            - EXCHANGE_ACCOUNT
            - INTERNAL_WALLET
            - EXTERNAL_WALLET
            - NETWORK_CONNECTION
            - FIAT_ACCOUNT
            - COMPOUND
            - GAS_STATION
            - ONE_TIME_ADDRESS
            - UNKNOWN
        id:
          type: string
      required:
        - type
    TransferPeerPathResponse:
      allOf:
        - $ref: '#/components/schemas/TransferPeerPath'
        - type: object
          properties:
            name:
              type: string
            subType:
              type: string
            virtualType:
              type: string
              enum:
                - OFF_EXCHANGE
                - DEFAULT
                - UNKNOWN
            virtualId:
              type: string
    TransactionResponseDestination:
      type: object
      properties:
        amount:
          type: string
        amountUSD:
          type: string
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'
    VaultAsset:
      type: object
      properties:
        id:
          type: string
        total:
          description: The total wallet balance. In EOS this value includes the network balance, self staking and pending refund. For all other coins it is the balance as it appears on the blockchain.
          type: string
        balance:
          deprecated: true
          description: Deprecated - replaced by "total"
          type: string
        available:
          description: Funds available for transfer. Equals the blockchain balance minus any locked amounts
          type: string
        pending:
          description: The cumulative balance of all transactions pending to be cleared
          type: string
        frozen:
          description: The cumulative frozen balance
          type: string
        lockedAmount:
          description: Funds in outgoing transactions that are not yet published to the network
          type: string
        staked:
          description: Staked balance
          type: string
        totalStakedCPU:
          type: string
        totalStakedNetwork:
          type: string
        selfStakedCPU:
          type: string
        selfStakedNetwork:
          type: string
        pendingRefundCPU:
          type: string
        pendingRefundNetwork:
          type: string
        blockHeight:
          type: string
        blockHash:
          type: string
        allocatedBalances:
          type: array
          items:
            $ref: '#/components/schemas/AllocatedBalance'
        rewardsInfo:
          $ref: '#/components/schemas/RewardsInfo'
    VaultAccount:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/VaultAsset'
        hiddenOnUI:
          type: boolean
        customerRefId:
          type: string
        autoFuel:
          type: boolean
    VaultAccountsPagedResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/VaultAccount'
        paging:
          type: object
          properties:
            before:
              type: string
            after:
              type: string
        previousUrl:
          type: string
        nextUrl:
          type: string
    CreateVaultAssetResponse:
      type: object
      properties:
        id:
          type: string
        address:
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        tag:
          type: string
        eosAccountName:
          type: string
        status:
          type: string
        activationTxId:
          type: string
    VaultWalletAddress:
      type: object
      properties:
        assetId:
          type: string
        address:
          type: string
        description:
          type: string
        tag:
          type: string
        type:
          type: string
        customerRefId:
          type: string
        addressFormat:
          type: string
          enum:
            - SEGWIT
            - LEGACY
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        bip44AddressIndex:
          type: integer
    CreateAddressResponse:
      type: object
      properties:
        address:
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        tag:
          type: string
        bip44AddressIndex:
          type: integer
    TransactionSubStatus:
      type: string
      enum:
        - INSUFFICIENT_FUNDS
        - AMOUNT_TOO_SMALL
        - UNSUPPORTED_ASSET
        - UNAUTHORISED__MISSING_PERMISSION
        - INVALID_SIGNATURE
        - API_INVALID_SIGNATURE
        - UNAUTHORISED__MISSING_CREDENTIALS
        - UNAUTHORISED__USER
        - UNAUTHORISED__DEVICE
        - INVALID_UNMANAGED_WALLET
        - INVALID_EXCHANGE_ACCOUNT
        - INSUFFICIENT_FUNDS_FOR_FEE
        - INVALID_ADDRESS
        - WITHDRAW_LIMIT
        - API_CALL_LIMIT
        - ADDRESS_NOT_WHITELISTED
        - TIMEOUT
        - CONNECTIVITY_ERROR
        - THIRD_PARTY_INTERNAL_ERROR
        - CANCELLED_EXTERNALLY
        - INVALID_THIRD_PARTY_RESPONSE
        - VAULT_WALLET_NOT_READY
        - MISSING_DEPOSIT_ADDRESS
        - ONE_TIME_ADDRESS_DISABLED
        - INTERNAL_ERROR
        - UNKNOWN_ERROR
        - AUTHORIZER_NOT_FOUND
        - INSUFFICIENT_RESERVED_FUNDING
        - MANUAL_DEPOSIT_ADDRESS_REQUIRED
        - INVALID_FEE
        - ERROR_UNSUPPORTED_TRANSACTION_TYPE
        - UNSUPPORTED_OPERATION
        - 3RD_PARTY_PROCESSING
        - PENDING_BLOCKCHAIN_CONFIRMATIONS
        - 3RD_PARTY_CONFIRMING
        - CONFIRMED
        - 3RD_PARTY_COMPLETED
        - CANCELLED_BY_USER
        - 3RD_PARTY_CANCELLED
        - 3RD_PARTY_REJECTED
        - AML_SCREENING_REJECTED
        - BLOCKED_BY_POLICY
        - FAILED_AML_SCREENING
        - PARTIALLY_FAILED
        - 3RD_PARTY_FAILED
        - ZERO_BALANCE_IN_PERMANENT_ADDRESS
        - GAS_PRICE_TOO_LOW_FOR_RBF
        - DROPPED_BY_BLOCKCHAIN
        - INVALID_FEE_PARAMS
        - MISSING_TAG_OR_MEMO
        - SIGNING_ERROR
        - GAS_LIMIT_TOO_LOW
        - TOO_MANY_INPUTS
        - MAX_FEE_EXCEEDED
        - ACTUAL_FEE_TOO_HIGH
        - INVALID_CONTRACT_CALL_DATA
        - INVALID_NONCE_TOO_LOW
        - INVALID_NONCE_TOO_HIGH
        - INVALID_NONCE_FOR_RBF
        - FAIL_ON_LOW_FEE
        - TOO_LONG_MEMPOOL_CHAIN
        - TX_OUTDATED
        - INCOMPLETE_USER_SETUP
        - SIGNER_NOT_FOUND
        - INVALID_TAG_OR_MEMO
        - NEED_MORE_TO_CREATE_DESTINATION
        - NON_EXISTING_ACCOUNT_NAME
        - ENV_UNSUPPORTED_ASSET
      description: >
        - `INSUFFICIENT_FUNDS` - Not enough funds to fulfill the withdraw request
        
        - `AMOUNT_TOO_SMALL` - Attempt to withdraw an amount below the allowed minimum
        
        - `UNSUPPORTED_ASSET` - Asset is not supported
        
        - `UNAUTHORISED__MISSING_PERMISSION` - Third party (e.g. exchange) API missing permission
        
        - `INVALID_SIGNATURE` - Invalid transaction signature
        
        - `API_INVALID_SIGNATURE` - Third party (e.g. exchange) API call invalid signature
        
        - `UNAUTHORISED__MISSING_CREDENTIALS` - Missing third party (e.g. exchange) credentials
        
        - `UNAUTHORISED__USER` - Attempt to initiate or approve a transaction by an unauthorised user
        
        - `UNAUTHORISED__DEVICE` - Unauthorised user's device
        
        - `INVALID_UNMANAGED_WALLET` - Unmanaged wallet is disabled or does not exist
        
        - `INVALID_EXCHANGE_ACCOUNT` - Exchange account is disabled or does not exist
        
        - `INSUFFICIENT_FUNDS_FOR_FEE` - Not enough balance to fund the requested transaction
        
        - `INVALID_ADDRESS` - Unsupported address format
        
        - `WITHDRAW_LIMIT` - Transaction exceeds the exchange's withdraw limit
        
        - `API_CALL_LIMIT` - Exceeded third party (e.g. exchange) API call limit
        
        - `ADDRESS_NOT_WHITELISTED` - Attempt to withdraw from an exchange to a non whitelisted address
        
        - `TIMEOUT` - Request timeout
        
        - `CONNECTIVITY_ERROR` - Network error
        
        - `THIRD_PARTY_INTERNAL_ERROR` - Received an internal error response from a third party service
        
        - `CANCELLED_EXTERNALLY` - Transaction was canceled by a third party service
        
        - `INVALID_THIRD_PARTY_RESPONSE` - Unrecognized third party response
        
        - `VAULT_WALLET_NOT_READY` - Vault wallet is not ready
        
        - `MISSING_DEPOSIT_ADDRESS` - Could not retrieve a deposit address from the exchange
        
        - `INTERNAL_ERROR` - Internal error while processing the transaction
        
        - `UNKNOWN_ERROR` - Unexpected error
        
        - `AUTHORIZER_NOT_FOUND` - No authorizer found to approve the operation or the only authorizer found is the initiator
        
        - `INSUFFICIENT_RESERVED_FUNDING` - Some assets require a minimum of reserved funds being kept on the account
        
        - `MANUAL_DEPOSIT_ADDRESS_REQUIRED` - Error while retrieving a deposit address from an exchange. Please generate a deposit address for your exchange account
        
        - `INVALID_FEE` - Transaction fee is not in the allowed range
        
        - `ERROR_UNSUPPORTED_TRANSACTION_TYPE` - Attempt to execute an unsupported transaction type
        
        - `UNSUPPORTED_OPERATION` - Unsupported operation
        
        - `3RD_PARTY_PROCESSING` - The transaction is pending approval by the 3rd party service (e.g exchange)
        
        - `PENDING_BLOCKCHAIN_CONFIRMATIONS` - Pending Blockchain confirmations
        
        - `3RD_PARTY_CONFIRMING` - Pending confirmation on the exchange
        
        - `CONFIRMED` - Confirmed on the blockchain
        
        - `3RD_PARTY_COMPLETED` - Completed on the 3rd party service (e.g exchange)
        
        - `PENDING_BLOCKCHAIN_CONFIRMATIONSREJECTED_BY_USER` - The transaction was rejected by one of the signers
        
        - `CANCELLED_BY_USER` - The transaction was canceled via the Console or the API
        
        - `3RD_PARTY_CANCELLED` - Cancelled on the exchange
        
        - `3RD_PARTY_REJECTED` - Rejected or not approved in time by user
        
        - `AML_SCREENING_REJECTED` - Rejected on AML Screening
        
        - `BLOCKED_BY_POLICY` - Transaction is blocked due to a policy rule
        
        - `FAILED_AML_SCREENING` - AML Screening failed
        
        - `PARTIALLY_FAILED` - Only for Aggregated transactions. One or more of the associated transaction records failed
        
        - `3RD_PARTY_FAILED` - Transaction failed at the exchange
        
        - `ZERO_BALANCE_IN_PERMANENT_ADDRESS` - Not enough BTC balance to fund the requested transaction in legacy address
        
        - 'DROPPED_BY_BLOCKCHAIN' - The transaction was replaced by another transaction with higher fee
        
        - 'INVALID_FEE_PARAMS' - Fee parameters are inconsistent or unknown
        
        - 'MISSING_TAG_OR_MEMO' - A tag or memo is required to send funds to a third party address, including all exchanges
        
        - 'SIGNING_ERROR' - The transaction signing failed, resubmit the transaction to sign again
        
        - 'GAS_LIMIT_TOO_LOW' - The transaction was rejected because the gas limit was set too low
        
        -  'MAX_FEE_EXCEEDED' - Gas price is currently above selected max fee
        
        - 'ACTUAL_FEE_TOO_HIGH' - Chosen fee is below current price
        
        - 'INVALID_CONTRACT_CALL_DATA' - Transaction data was not encoded properly
        
        - 'INVALID_NONCE_TOO_LOW' - Illegal nonce
        
        - 'INVALID_NONCE_TOO_HIGH' - Illegal nonce
        
        - 'INVALID_NONCE_FOR_RBF' - No matching nonce
        
        - 'FAIL_ON_LOW_FEE' - Current blockchain fee is higher than selected
        
        - 'TOO_LONG_MEMPOOL_CHAIN' - Too many unconfirmed transactions from this address
        
        - 'TX_OUTDATED' - Nonce already used
        
        - 'INCOMPLETE_USER_SETUP' - MPC setup was not completed
        
        - 'SIGNER_NOT_FOUND' - Signer not found
        
        - 'INVALID_TAG_OR_MEMO' - Invalid Tag or Memo
        
        - 'ZERO_BALANCE_IN_PERMANENT_ADDRESS' - Not enough BTC on legacy permanent address
        
        - 'NEED_MORE_TO_CREATE_DESTINATION' - Insufficient funds for creating destination account
        
        - 'NON_EXISTING_ACCOUNT_NAME' - Account does not exist
        
        - 'ENV_UNSUPPORTED_ASSET' - Asset is not supported under this workspace settings
    TransactionOperation:
      type: string
      enum:
        - TRANSFER
        - MINT
        - BURN
        - SUPPLY_TO_COMPOUND
        - REDEEM_FROM_COMPOUND
        - RAW
        - CONTRACT_CALL
        - INTERNAL_LEDGER_TRANSFER
        - TYPED_MESSAGE
      default: TRANSFER
    NetworkRecord:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        txHash:
          type: string
        networkFee:
          type: string
        assetId:
          type: string
        netAmount:
          description: The net amount of the transaction, after fee deduction
          type: string
        isDropped:
          type: boolean
        type:
          type: string
        destinationAddress:
          type: string
        sourceAddress:
          type: string
        amountUSD:
          type: string
        index:
          type: number
        rewardInfo:
          $ref: '#/components/schemas/RewardInfo'
    AmlScreeningResult:
      type: object
      properties:
        provider:
          type: string
        payload:
          type: object
    FeeInfo:
      type: object
      properties:
        networkFee:
          type: string
        serviceFee:
          type: string
        gasPrice:
          type: string
    BlockInfo:
      type: object
      properties:
        blockHeight:
          type: string
        blockHash:
          type: string
    UnsignedMessage:
      type: object
      properties:
        content:
          type: string
        bip44addressIndex:
          type: integer
        bip44change:
          type: number
        derivationPath:
          type: array
          items:
            type: number
      required:
        - content
    SignedMessage:
      type: object
      properties:
        content:
          type: string
        algorithm:
          type: string
          enum:
            - MPC_ECDSA_SECP256K1
            - MPC_ECDSA_SECP256R1
            - MPC_EDDSA_ED25519
        derivationPath:
          type: array
          items:
            type: number
        signature:
          type: object
          properties:
            fullSig:
              type: string
            r:
              type: string
            s:
              type: string
            v:
              type: number
        publicKey:
          type: string
    OneTimeAddress:
      type: object
      properties:
        address:
          type: string
        tag:
          type: string
      required:
        - address
    DestinationTransferPeerPath:
      allOf:
        - $ref: '#/components/schemas/TransferPeerPath'
        - type: object
          properties:
            oneTimeAddress:
              $ref: '#/components/schemas/OneTimeAddress'
    TransactionResponse:
      type: object
      properties:
        id:
          type: string
        assetId:
          type: string
        source:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        destination:
          $ref: '#/components/schemas/TransferPeerPathResponse'
        requestedAmount:
          description: The amount requested by the user
          type: number
        amount:
          description: If the transfer is a withdrawal from an exchange, the actual amount that was requested to be transferred. Otherwise, the requested amount
          type: number
        netAmount:
          description: The net amount of the transaction, after fee deduction
          type: number
        amountUSD:
          description: The USD value of the requested amount
          type: number
          nullable: true
        serviceFee:
          description: The total fee deducted by the exchange from the actual requested amount (serviceFee = amount - netAmount)
          type: number
        fee:
          description: Deprecated - replaced by "networkFee"
          type: number
          deprecated: true
        networkFee:
          description: The fee paid to the network
          type: number
        createdAt:
          type: number
          description: Unix timestamp
        lastUpdated:
          type: number
          description: Unix timestamp
        status:
          type: string
          enum:
            - SUBMITTED
            - PENDING_SIGNATURE
            - PENDING_AUTHORIZATION
            - COMPLETED
            - CONFIRMING
            - FAILED
            - REJECTED
            - CANCELLING
            - CANCELLED
            - BROADCASTING
            - BLOCKED
            - TIMEOUT
            - QUEUED
            - PENDING_3RD_PARTY
            - PENDING_3RD_PARTY_MANUAL_APPROVAL
            - PENDING_AML_SCREENING
            - PARTIALLY_COMPLETED
        txHash:
          type: string
        tag:
          type: string
        subStatus:
          $ref: '#/components/schemas/TransactionSubStatus'
        destinationAddress:
          type: string
        sourceAddress:
          type: string
        destinationAddressDescription:
          type: string
        destinationTag:
          type: string
        signedBy:
          type: array
          items:
            type: string
        createdBy:
          type: string
        rejectedBy:
          type: string
        addressType:
          type: string
        note:
          type: string
        exchangeTxId:
          type: string
        feeCurrency:
          type: string
        operation:
          $ref: '#/components/schemas/TransactionOperation'
        networkRecords:
          type: array
          items:
            $ref: '#/components/schemas/NetworkRecord'
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        customerRefId:
          type: string
        numOfConfirmations:
          type: number
        amountInfo:
          $ref: '#/components/schemas/AmountInfo'
        feeInfo:
          $ref: '#/components/schemas/FeeInfo'
        signedMessages:
          type: array
          items:
            $ref: '#/components/schemas/SignedMessage'
        extraParameters:
          type: object
          properties: { }
        externalTxId:
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponseDestination'
        blockInfo:
          $ref: '#/components/schemas/BlockInfo'
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'
        index:
          type: number
        rewardInfo:
          $ref: '#/components/schemas/RewardInfo'
        feePayerInfo:
          type: object
          properties:
            feePayerAccountId:
              type: string
    CreateTransactionResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
    TransactionRequestDestination:
      type: object
      properties:
        amount:
          type: string
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPath'
    TransactionRequest:
      type: object
      properties:
        assetId:
          type: string
        source:
          $ref: '#/components/schemas/TransferPeerPath'
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPath'
        amount:
          oneOf:
            - type: number
            - type: string
        fee:
          description: >-
            - For BTC based assets, the fee per bytes in the asset's smallest unit (Satoshi/Latoshi etc.)
            
            - For XRP, the fee for the transaction
          oneOf:
            - type: number
            - type: string
        feeLevel:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        priorityFee:
          description: >-
            - For ETH based assets only, the fee for eip-1559 transaction pricing mechanism. Value is in gwei.
          oneOf:
            - type: number
            - type: string
        failOnLowFee:
          type: boolean
        maxFee:
          description: >-
            - For ETH based assets only, must be provided when using the priorityFee parameter. This will be used to limit the fee max possible fee (according to eip-1559). Value is in gwei.
            
            - For other assets, it fails a transaction when the automatically selected fee is higher than the provided value.
          type: string
        gasPrice:
          description: >-
            For ETH based asset only. this will be used instead of the fee property. Value is in gwei
          oneOf:
            - type: number
            - type: string
        gasLimit:
          oneOf:
            - type: number
            - type: string
        networkFee:
          oneOf:
            - type: number
            - type: string
        note:
          type: string
        autoStaking:
          type: boolean
        networkStaking:
          oneOf:
            - type: number
            - type: string
        cpuStaking:
          oneOf:
            - type: number
            - type: string
        extraParameters:
          type: object
          properties: { }
        operation:
          $ref: '#/components/schemas/TransactionOperation'
        customerRefId:
          type: string
        replaceTxByHash:
          type: string
        externalTxId:
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TransactionRequestDestination'
        treatAsGrossAmount:
          type: boolean
        forceSweep:
          type: boolean
        feePayerInfo:
          type: object
          properties:
            feePayerAccountId:
              type: string
    DropTransactionRequest:
      type: object
      properties:
        txId:
          type: string
        feeLevel:
          type: string
        gasPrice:
          type: string
    DropTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
        transactions:
          type: array
          items:
            type: string
    CancelTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
    UnfreezeTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
    FreezeTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
    ValidateAddressResponse:
      type: object
      properties:
        isValid:
          type: boolean
        isActive:
          type: boolean
        requiresTag:
          type: boolean

